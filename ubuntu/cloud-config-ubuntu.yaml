#cloud-config
# Add groups to the system
# The following example adds the ubuntu group with members 'root' and 'sys'
# and the empty group cloud-users.
groups:
  - ubuntu: [root,sys]
  - cloud-users

# Add users to the system.
users:
  - default
  - name: suporte
    gecos: Suporte 4Linux
    primary_group: suporte
    groups: users
    sudo: ALL=(ALL) NOPASSWD:ALL
    selinux_user: staff_u
    expiredate: '2030-09-01'
    ssh_import_id: suporte
    lock_passwd: false
    passwd: $6$dhLxba2HDNVuKL1S$.P6Bf.62VYlBXmWhyBjQjYatDlrshBt0FAzDS0LvJeeRvg9G22OhZ89VecQ03fI1VIvNS2BcdllkEHXZr20SP0

# Networking interface
network:
  version: 1
  config:
  - type: physical
    name: ens8
  
# Packages essentials
packages:
  - nano
  - vim 
  - net-tools
  - build-essential
  - inetutils-ping


# Docker full installation 
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - vagrant
  - gnupg-agent
  - software-properties-common

# Enable ipv4 forwarding, required on CIS hardened machines
write_files:
  - path: /etc/sysctl.d/enabled_ipv4_forwarding.conf
    content: |
      net.ipv4.conf.all.forwarding=1


# Create the docker group
groups:
  - docker

# Install Docker, for production, consider pinning to stable versions
runcmd:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get update -y
  - apt-get install -y docker-ce docker-ce-cli containerd.io
  - systemctl start docker
  - systemctl enable docker

# Add default auto created user to docker group
system_info:
  default_user:
    groups: [docker]

#  Up dockerfile for container ubuntu-ssh
runcmd:
  - docker image build -t ubuntu-ssh /opt/files-oci-4linux/ubuntu/docker-vagrant-4750
  - docker network create --driver bridge --subnet 172.18.0.0/16 dexterlan 
  
